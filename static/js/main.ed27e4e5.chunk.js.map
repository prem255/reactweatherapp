{"version":3,"sources":["weather/Temp.js","App.js","index.js"],"names":["Temp","useState","city","Setcity","search","Setsearch","useEffect","a","url","fetch","response","json","resjson","console","log","main","fetchApi","className","type","name","onChange","event","target","value","id","temp","temp_max","temp_min","pressure","humidity","App","ReactDOM","render","document","getElementById"],"mappings":"uMAkDeA,EA/CF,WAET,MAAwBC,mBAAS,KAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,UAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaA,OAZAC,qBAAU,YAEQ,uCAAG,gCAAAC,EAAA,6DACPC,EADO,2DACmDJ,EADnD,iEAEUK,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAIbC,QAAQC,IAAIF,GACZT,EAAQS,EAAQG,MALH,2CAAH,qDAOdC,KAED,CAACZ,IAEA,mCACI,sBAAKa,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBAAOC,KAAK,SAASD,UAAU,aAAaE,KAAK,SAASC,SAAU,SAACC,GACjEhB,EAAUgB,EAAMC,OAAOC,YAM7BrB,EACE,qCACI,sBAAKe,UAAU,WAAf,cAA2B,6BAAKb,OAGhC,sBAAKa,UAAU,aAAf,UAEI,mCAAM,sBAAMO,GAAG,OAAT,SAAiBtB,EAAKuB,OAA5B,OACA,6CAAgB,uBAAMD,GAAG,WAAT,UAAqBtB,EAAKwB,SAA1B,SAAhB,eAAyE,uBAAMF,GAAG,WAAT,UAAqBtB,EAAKyB,SAA1B,QAAzE,OACA,4CAAc,uBAAMH,GAAG,WAAT,UAAqBtB,EAAK0B,SAA1B,SAAd,eAAuE,uBAAMJ,GAAG,WAAT,UAAqBtB,EAAK2B,SAA1B,OAAvE,aATF,mBAAGZ,UAAU,WAAb,kCCnBXa,EARH,WACR,OACI,mCACI,cAAC,EAAD,OCHZC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.ed27e4e5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport './css/style.css'\r\n\r\nconst Temp = () => {\r\n\r\n    const [city, Setcity] = useState(\" \");\r\n    const [search, Setsearch] = useState(\"Mumbai\");\r\n    useEffect(() => {\r\n\r\n        const fetchApi = async () => {\r\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=0b2c7ba3f0d7cfd2b5674a23da45ed3d`;\r\n            const response = await fetch(url);\r\n            const resjson = await response.json();\r\n            console.log(resjson);\r\n            Setcity(resjson.main);\r\n        };\r\n        fetchApi();\r\n\r\n    }, [search])\r\n    return (\r\n        <>\r\n            <div className=\"box\" >\r\n                <div className=\"inputData\">\r\n                    <input type=\"search\" className=\"inputField\" name=\"search\" onChange={(event) => {\r\n                        Setsearch(event.target.value);\r\n\r\n                    }} />\r\n\r\n                </div >\r\n\r\n                {!city ? (<p className=\"notfound\">City Not Found</p>) : (\r\n                    <>\r\n                        <div className=\"location\"> <h1>{search}</h1>\r\n                        </div>\r\n\r\n                        <div className=\"tempminmax\">\r\n\r\n                            <h4 > <span id=\"temp\">{city.temp}</span>C</h4>\r\n                            <h6 > Max-value <span id=\"temp_max\">{city.temp_max} C </span>| Min-value <span id=\"temp_min\">{city.temp_min} C</span> </h6>\r\n                            <h6> Pressure <span id=\"temp_max\">{city.pressure} Pa</span> | Humidity <span id=\"temp_max\">{city.humidity}%</span> </h6>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n\r\n            </div>\r\n        </>\r\n    )\r\n\r\n};\r\nexport default Temp;\r\n","import React from 'react'\r\nimport Temp from './weather/Temp'\r\n// import Main from './amazona/Main.js'\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Temp />\r\n\r\n        </>\r\n    )\r\n};\r\nexport default App;\r\n","import ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}